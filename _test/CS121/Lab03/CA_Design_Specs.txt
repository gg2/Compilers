Objective
Design and develop a program that can generate future generations of a one-dimensional
cellular automata (CA) given some initial configuration and set of rules for finding the next generation.

Description
 A structure (dynamic array) to hold the initial state of the CA. Allocate a maximum
of 128 characters. Start smaller initially to make sure the program is working correctly.
 Initial state read from a file.
 Initial state generated randomly.
 The next generation of the CA is to be generated using the following rules:
1. A living cell dies
2. A dead cell comes to life if and only if its left side touches a live cell.
3. A dead cell comes to life if and only if its right side touches a live cell.
 Describe how you can test both the storage of the initial CA and the generational rules.

Suggestions
 Design your program.
 Develop your program incrementally.
 Think!

Deliverables
 A complete program design to perform the operations described above. Your design
should describe all functions and data structures that you think will be required for
this program. Estimate how long you think it will take you to implement this program.
 Programming Log - a record of your work and what you learned.
 Output - proof that your program worked.

__________

C++
how to display: terminal text? separate window? images?
user interaction: config from file? length? length from file? continuous or turn-by-turn?
data: length, display array, state array, cell object, cell state types array, ifstream object (if from file)
functions: read data (length and config) from file; randomize config; display config; determine circumstances (cells die, living neighbors); update state; 

One-dimensional Cellular Automata

Assumptions:
1) It is unspecified in what environment or in what manner the program is to display, so it is assumed sufficient to program in C++, using a textual interface and display, per the current context of the lab and classwork.
2) File format of input data is unspecified, so it is assumed that .txt or other plain text data is acceptable.
3) A maximum length of 128 characters is specified for the dimension of the configuration. It is assumed that the ability to specify different dimensions other than and less than 128 is also desired.

Expectations:
1) It is assumed that this is a one-off program, with no expectations for improvement, or ongoing maintenance.

Program Design:
Data structures - length (of configuration; 128 default); display array[128]; state array[128]; cell class; cell state types array[2]; ifstream object
Functions - initialization routine; get filename and information for configuration; display routine; update routine;

Time Estimate:
6 hours (3 hours x 2 to allow for inevitable issues) 