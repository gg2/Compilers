CS 121 Lab 3
Gabe Gibler

One-dimensional Cellular Automata

Assumptions:
1) It is unspecified in what environment or in what manner the program is to display, so it is assumed sufficient to program in C++, using a textual interface and display, per the current context of the lab and classwork.
2) File format of input data is unspecified, so it is assumed that .txt or other plain text data is acceptable.
3) A maximum length of 128 characters is specified for the dimension of the configuration. It is assumed that the ability to specify different dimensions other than and less than 128 is also desired.

Expectations:
1) This program will accept a variety of options to configure a one-dimensional array of "cells", and then output successive generations of the cells according to the provided rules.
2) It is assumed that this is a one-off program, with no expectations for improvement, or ongoing maintenance.

Program Design:
Data structures - length (of configuration; 128 default); display array[128]; state array[128]; cell class; cell state types array[2]; ifstream object
Functions - initialization routine; get filename and information for configuration; display routine; update routine;

Time Estimate:
6 hours (3 hours x 2 to allow for inevitable issues) 
__________

Journal

2015/02/02
10:40-11:10 > Read lab requirements; review previous Game of Life (CS 120)
11:30-12:20 > Review previous Game of Life; write out program flow; document required data structures

10:14-10:35 > Writing out design specs
10:35-11:20 > Intermittently revising previously written Game of Life

2015/02/04
11:32-12:14 > Finished initial revision of previously written Game of Life
22:50-11:30 > Upload and compile; CursWin has some strange problem, so continuing to further revise the program so it doesn't use CursWin.
11:30-1:59 > Trying to get ifstream to work, mainly string to char to int conversions to work; C++ documentation for ifstream is completely different than what worked before. Trying to figure out how getline works and why I keep getting blank, truncated output.

2015/02/05
14:28-15:50 > Creating separate test file to determine for certain how ifstream works; testing ifstream further; the .txt files I'm using (Windows) contain info that the Unix environment is interpreting differently, and thus adding garbage info to the first 3 slots of the getline() output. Creating the .txt input files in Nano resolves the issue. Also, don't know why it's suddenly different, but ifstream will not read the data directly into the int array. It worked before!! Something that CursWin / Curses library was facilitating? Instead, I had to: read to string, single string char of string to new string, string.c_str() into atoi, atoi into the target int array.
16:00-16:20 > Finalizing program, and testing.
